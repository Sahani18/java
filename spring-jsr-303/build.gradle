apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = projectSourceCompatibility
targetCompatibility = projectSourceCompatibility

group = projectGroup
version = projectVersion

configurations {
    provided
}

repositories {
    mavenCentral()
}

dependencies {
    compile(
            [group: 'javax.inject', name: 'javax.inject', version: injectApiVersion],
            [group: 'javax.validation', name: 'validation-api', version: beanValidationApiVersion],
            [group: 'javax.annotation', name: 'javax.annotation-api', version: annotationApiVersion],
            [group: 'org.springframework', name: 'spring-beans', version: springVersion],
            [group: 'org.springframework', name: 'spring-context', version: springVersion],
            [group: 'org.springframework', name: 'spring-aop', version: springVersion],
            [group: 'org.aspectj', name: 'aspectjrt', version: aspectjVersion]
    )
    runtime(
            [group: 'org.hibernate', name: 'hibernate-validator', version: hibernateValidatorVersion],
            [group: 'javax.el', name: 'javax.el-api', version: elVersion],
            [group: 'org.glassfish.web', name: 'javax.el', version: glassfishElVersion],
            [group: 'org.aspectj', name: 'aspectjweaver', version: aspectjVersion]
    )
    provided(
            [group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion],
            [group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4jVersion]
    )
    testCompile(
            [group: 'junit', name: 'junit', version: junitVersion],
            [group: 'org.springframework', name: 'spring-test', version: springVersion]
    )
}

sourceSets {
    [main, test].each {
        it.compileClasspath += configurations.provided
        it.runtimeClasspath += configurations.provided

        it.output.resourcesDir = project.file("$buildDir/classes/${it.name}")
    }
}

jar { manifest.attributes provider: 'Abhijit Sarkar' }

task wrapper(type: Wrapper) {
    gradleVersion = project.gradleVersion
}